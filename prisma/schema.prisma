generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid()) @db.Uuid
  email          String     @unique
  password       String?
  providers      String[]   @default([])
  systemLang     String?    @default("en")
  createdAt      DateTime   @default(now())
  google_linking DateTime?

  histories      History[]
  favoriteItems  Favorite[]
  passwordResets PasswordReset[]
  refreshTokens RefreshToken[]
}

model History {
  id          String   @id @default(uuid()) @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.Uuid
  inputText   String
  translation String
  alt1        String?
  alt2        String?
  alt3        String?
  inputLang   String
  outputLang  String
  createdAt   DateTime @default(now())

  @@unique([id, userId])
}

model Favorite {
  id          String   @id @default(uuid()) @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.Uuid
  inputText   String
  translation String
  alt1        String?
  alt2        String?
  alt3        String?
  inputLang   String
  outputLang  String
  createdAt   DateTime @default(now())

  @@unique([id, userId])
}

model PasswordReset {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  token     String   @unique                // hashed token
  userId    String   @db.Uuid
  createdAt DateTime @default(now())
  expiresAt DateTime
  revoked   Boolean  @default(false)

  user User @relation(fields: [userId], references: [id])
}
